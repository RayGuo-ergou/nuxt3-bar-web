name: sync documents from database
on:
  workflow_run:
    workflows: ['Reset Database']
    types:
      - completed

  schedule:
    - cron: '0 0 * * *'

env:
  GITHUB_NAME: RayGuo-ergou
  GITHUB_EMAIL: ma2808203259@hotmail.com

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: update openssl
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2.2.4
        name: install pnpm
        id: pnpm-install
        with:
          version: 7.27.0
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - name: Install and Build ðŸ”§ # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          pnpm install -g typescript ts-node @types/node prisma @prisma/client
      - name: create .env
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
      - name: remove import nuxt tsconfig.json
        run: sed -i '/extends/d' tsconfig.json
      - name: deploy database
        run: |
          pnpm database:deploy
      - name: sync documents
        run: |
          chmod +x ./scripts/syncMDwithDB.bash
          bash ./scripts/syncMDwithDB.bash
        shell: bash
      - name: commit
        run: |
          git config --local user.email "${{ env.GITHUB_EMAIL }}"
          git config --local user.name "${{ env.GITHUB_NAME }}"
          git add ./content
          git commit -m 'update documents' || echo "nothing to commit"
          git push || echo "nothing to push"
